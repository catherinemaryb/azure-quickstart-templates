{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "newStorageAccountName": {
            "type": "string",
                "metadata": {
                    "Description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
                }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D1",
            "allowedValues": [
                "Standard_D1",
                "Standard_D2",
                "Standard_D3",
                "Standard_D4",
                "Standard_D5"
            ]
        },
        "location": {
            "type": "string",
            "defaultValue": "West US",
                "metadata": {
                    "Description": "The location where the Virtual Machine will be deployed."
                },
                "allowedValues": [
                    "West US",
                    "East US",
                    "Southeast Asia",
                    "East Asia",                                
                    "West Europe"
                ]
        },                
        "adminUsername": {
            "type": "string",
                "metadata": {
                   "Description": "Username for the Virtual Machine."
                }
        },
        "adminPassword": {
            "type": "securestring",
                "metadata": {
                    "Description": "Password for the Virtual Machine."
                }
        },
        "dnsNameForPublicIP": {
            "type": "string",
                "metadata": {
                      "Description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
                }
        },
        "ubuntuOSVersion": {
            "type": "string",
            "defaultValue": "14.04.2-LTS",
                "metadata": {
                      "Description": "The Ubuntu version for deploying the Docker containers. This will pick a fully patched image of this given Ubuntu version. Allowed values: 14.04.2-LTS, 14.04-DAILY, 15.04, 14.10."
                 },
                "allowedValues": [
                    "14.04.2-LTS",
                    "14.04-DAILY",
                    "15.04",
                    "14.10"
                ]
        }, 
        "dockerHubImage1": {
            "type": "string",
            "metadata": {
                   "Description": "The name of the first DockerHub image to pass through to Docker compose on the VM."
            },
            "defaultValue": "nginx"
        },
        "dockerHubImage2": {
            "type": "string",
             "metadata": {
                    "Description": "The second DockerHub image."
            },                        
            "defaultValue": "redis"
        },
        "dockerHubImage3": {
            "type": "string",
             "metadata": {
                    "Description": "The third DockerHub image."
             },
             "defaultValue": "mongo"
        }
    },
    "variables": {
        "imagePublisher": "Canonical", 
        "imageOffer": "UbuntuServer", 
        "OSDiskName": "osdiskfordockersimple",
        "nicName": "myVMNic",
        "extensionName": "DockerExtension",
        "addressPrefix": "10.0.0.0/16", 
        "subnetName": "Subnet",
        "subnetPrefix": "10.0.0.0/24",
        "storageAccountType": "Standard_LRS",
        "publicIPAddressName": "myPublicIP",
        "publicIPAddressType": "Dynamic",
        "vmStorageAccountContainerName": "vhds",
        "vmName": "MyDockerVM",
        "vmSize": "Standard_D1",
        "virtualNetworkName": "MyVNET",        
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]"
    },    
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('newStorageAccountName')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
                }
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computername": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku" : "[parameters('ubuntuOSVersion')]",
                        "version":"latest"
                    },
                   "osDisk" : {
                        "name": "osdisk1",
                        "vhd": {
                            "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'),'/', variables('extensionName'))]",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
            ],
            "properties": {
                "publisher": "MSOpenTech.Extensions",
                "type": "DockerExtension",
                "typeHandlerVersion": "0.6",
                "settings": {
                    "composeup": {
                         "service1": {
                             "image": "[parameters('dockerHubImage1')]"
                         },
                         "service2": {
                             "image": "[parameters('dockerHubImage2')]"
                         },
                         "service3": {
                             "image": "[parameters('dockerHubImage3')]"
                         }
                    },
                    "installonly": "true"
                }
            }
        }
    ]
} 
